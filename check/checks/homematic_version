#!/usr/bin/python
#
#
#   'UPDATE_MSG': {' 3.65.6.20220723': [' 3.65.11.20221005']},


#def parse_homematic(info):
#  result = { }
#  for line in info:
#    key = line[0]
#    device = result.get(key)
#    if key == 'SVC_MSG':
#      if device is None:
#        device = []
#        result[key] = device
#      device.append(line[1:])
#    else:
#      if device is None:
#        device = { }
#        result[key] = device
#      device[line[1]] = line[2:]
#  return result


import json

def inventory_homematic_version(item):

  import pprint
  # pprint.pprint(item)

  versioninfo = None
  if len(item[0]) == 4:
    versioninfo, t, local, remote = item[0]
  if versioninfo:
    yield None, None


def check_homematic_version(item, params, parsed):

  versioninfo = None
  t = None # reserved for future use (raspberrymatic/homematic/ccu3)
  local = None
  
  if len(parsed[0]) == 4:
    versioninfo, t, local, remote = parsed[0]
  
  if versioninfo:
  
    if not local == remote:
      return 1, "Firmware %s (%s is available (!))" % (local, remote)
    else:
      return 0, "Firmware %s (up to date)" % local


check_info['homematic_version'] = {
  'check_function':      check_homematic_version,
  'inventory_function':  inventory_homematic_version,
  'service_description': "HomeMatic Version",
}

