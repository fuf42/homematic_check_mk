#!/usr/bin/python

def parse_homematic_alarms(info):
  result = { }
  for line in info:
    key = line[0]
    device = result.get(key)
    if key == 'ALARM_MSG':
      if device is None:
        device = []
        result[key] = device
      device.append(line[1:])
  return result

def inventory_homematic_alarms(parsed):
  yield 'ALARM Messages', None

def check_homematic_alarms(item, params, parsed):
  messages = parsed.get('ALARM_MSG', None);

  state = 0
  devices = []

  if messages is not None:
    #with open("/tmp/bla", "aw") as bla:
    #  bla.write(repr(messages))

    for msg,t,s,desc,count,last in messages:
      state = 2
      devices.append(msg + ": " + desc + ", state: " + s + " (" + count + "x, last: " + last + ")")

  if state == 0:
    return 0, 'No issues reported'

  return state, ', '.join(devices)

check_info['homematic_alarms'] = {
  'check_function':      check_homematic_alarms,
  'inventory_function':  inventory_homematic_alarms,
  'parse_function':      parse_homematic_alarms,
  'service_description': "Homematic %s",
}

